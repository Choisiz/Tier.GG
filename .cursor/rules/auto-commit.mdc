---
alwaysApply: true
---
# 🤖 Auto-Commit After AI Edits

Automatically stage and commit AI-made changes with Korean commit messages.

## 🔄 Behavior
- After each successful file edit, immediately stage changes and create a commit.
- Compose a concise Korean message using conventional types (`feat`, `fix`, `docs`, `refactor`, `style`, `test`, `perf`, `chore`).
- Include the list of changed files in the commit body.
- Run from the project root: `/Users/johnnyseo/Desktop/master/Tier.GG`.

## 🛡️ Safeguards
- Never commit sensitive files (skip if present): `.env`, `.env*`, `*.pem`, `*.key`.
- Respect `.gitignore` and skip if there are no staged changes.

## 🧰 Command
- Use the helper script to perform the commit:
```
bash .cursor/scripts/auto_commit.sh <type> "<요약 메시지>"
```

## 🧾 Message Examples
- `feat: 챔피언 스킨 API 추가`
- `fix: 플레이어 생성 시 유효성 검증 보완`
- `docs: README에 실행 방법 갱신`
- `chore: 의존성 버전 업데이트`

## ✅ Agent Instruction
- After any edit to code or rules, run the helper script with an appropriate type and a short Korean summary derived from the change.
- Example:
```
bash .cursor/scripts/auto_commit.sh chore "Cursor 규칙/스크립트 추가"
```